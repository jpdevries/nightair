$topMost:99999;

$black:rgb(8,8,8);
$green:#86f23b;

$themes:(
  invert:(
    bg:invert($black),
    stripe:invert(#162c07),
    fill:invert($green)
  ),
  calm:(
    bg:$black,
    stripe:darken(rgb(40,177,227),32%),
    fill:rgb(40,177,227)
  ),
  dangerous:(
    bg:$black,
    stripe:darken(rgb(251,0,7),36%),
    fill:rgb(251,0,7)
  ),
  bright:(
    bg:$black,
    stripe:darken(rgb(255,174,12),42%),
    fill:rgb(255,174,12)
  ),
  royal:(
    bg:$black,
    stripe:darken(rgb(110,0,255),28%),
    fill:saturate(rgb(110,0,255),24%)
  ),
  neon:(
    bg:$black,
    stripe:darken(rgb(200,0,226),32%),
    fill:rgb(200,0,226)
  ),
  sterc:(
    bg:$black,
    stripe:darken(rgb(214,42,104),38%),
    fill:rgb(214,42,104)
  ),
  pier31:(
    bg:white,
    stripe:darken(#7390A1,38%),
    fill:#B5230B
  )
);

%blink {
  animation: blink 2s step-start 0s infinite;
}

%shaded {
  background:linear-gradient(to bottom, rgba(0,0,0,1) 0%,rgba(0,0,0,0) 50%,rgba(0,0,0,1) 100%);
  body[data-theme="invert"] & {
    background:linear-gradient(to bottom, rgba(255,255,255,1) 0%,rgba(255,255,255,0) 50%,rgba(255,255,255,1) 100%);
  }
  body[data-theme="pier31"] & {
    background:linear-gradient(to bottom, rgba(lighten(#7390A1,12%),.86) 0%,rgba(lighten(#7390A1,12%),0) 50%,rgba(lighten(#7390A1,12%),.86) 100%);
  }
}

@keyframes blink {
  50% {
    visibility: hidden;
  }
}

@keyframes MODX-CYCLE-FILL {
  0% {
    fill:rgb(91,161,212);
    outline:rgb(91,161,212);
  }
  25% {
    fill:rgb(136,193,65);
    outline:rgb(136,193,65);
  }
  50% {
    fill:rgb(222,54,41);
    outline:rgb(222,54,41);
  }
  75% {
    fill:rgb(216,28,38);
    outline:rgb(216,28,38);
  }
}

@keyframes MODX-CYCLE-BG {
  0%   {
    opacity:1;
  }
  100% {
    opacity:0;
  }
}

h1,h2,h3,h4,h5,h6 {
  margin:0;
}

@mixin striped-bg() {
  background: linear-gradient(
    to bottom,
    $black,
    $black 50%,
    #162c07 50%,
    #162c07
  );
  background-size: 100% 4px; // The rectangle in which to repeat. It can be fully wide in this case
  @each $name, $theme in $themes {
    body[data-theme="#{$name}"] & {
      background: linear-gradient(
        to bottom,
        map-get($theme,bg),
        map-get($theme,bg) 50%,
        map-get($theme,stripe) 50%,
        map-get($theme,stripe)
      );
      background-size: 100% 4px; // The rectangle in which to repeat. It can be fully wide in this case
    }
    body[data-theme="modx"] & {
      background: linear-gradient(
        to bottom,
        $black,
        $black 50%,
        darken(rgb(91,161,212),42%) 50%,
        darken(rgb(91,161,212),42%)
      );
      background-size: 100% 4px; // The rectangle in which to repeat. It can be fully wide in this case
    }
  }
}

#status-bar {
  font-size:1.2em;
  display:flex;
  justify-content:center;
  > div {
    width:76vw;
    display:flex;
  }
  h2 {
    position:relative;
    flex-basis:3em;
    &.lit {
      z-index:$topMost + 1;
    }
  }
  svg {
    position:absolute;
    top:1em;
    left:0;
    right:0;
    height:4em;

  }
}

#clock {
  width:100vw;
  @include striped-bg();
  background-size: 100% 4px;
}

body {
  background:$black;
  //overflow:hidden;
  min-height:100vh;
  margin:0;

  background: linear-gradient(
    to bottom,
    $black,
    $black 50%,
    #162c07 50%,
    #162c07
  );

  &[data-theme="modx"] {
    background: linear-gradient(
      to bottom,
      $black,
      $black 50%,
      darken(rgb(91,161,212),14%) 50%,
      darken(rgb(91,161,212),14%)
    );
    /*&:after {
      display:block;
      content:" ";
      position:absolute;
      top:0;
      left:0;
      right:0;
      bottom:0;
      background:red;
      z-index:0;
      animation: MODX-CYCLE-BG 12s infinite alternate;
      //display:none;
      background: linear-gradient(
        to bottom,
        $black,
        $black 50%,
        darken(rgb(91,161,212),14%) 50%,
        darken(rgb(91,161,212),14%)
      );
      background-size: 100% 4px;
    }*/
  }
}

svg {
  fill:$green;
  outline:$green;
  transition:fill ease 2400ms, outline ease 2400ms;
  @each $name, $theme in $themes {
    body[data-theme="#{$name}"] & {
      fill:map-get($theme,fill);
      outline:map-get($theme,fill);
    }
  }
  body[data-theme="modx"] & {
    animation:MODX-CYCLE-FILL 42s infinite alternate;
  }
}

#meridian {
  z-index:0;
  position:absolute;
  top:6vh;
  right:6vw;
  font-size:2em;
  width:2em;
  height:1em;
}

#digits {
  @extend %shaded;
  display:flex;
  justify-content:center;
  font-size:8vw;
  z-index:$topMost;
  overflow:hidden;
  position:absolute;
  top:0;
  left:0;
  right:0;
  bottom:0;

  .settingAlarm, .alarming {
    .digit {
      &.seconds {
        @extend %blink;
      }
    }
  }

  .alarming {
    @extend %blink;
    .digit {

      &.separator {
        animation:none;
        body.ticking & {
          //animation:none;
        }
      }
    }
  }

  > div:not(.digit) {
    display:flex;
    justify-content:center;
    //overflow:hidden;
  }
}



.digit {
  display:flex;
  justify-content:center;
  flex-grow:0;
  flex-basis:14vw;
  position:relative;

  margin-right:-0.25em;
  //transform:scale(2.4);
  &.separator {
    flex-basis:0.42em;
    svg {
      transform:scale(2);
    }
    html.no-js &, body.ticking & {
      @extend %blink;
    }
  }

  .blur {
    position: absolute;
    top: 0;
    bottom: 0;
    left:0;
    right:0;
    height:100vh;
  }

  svg {
    //fill:$green;
    //outline:$green;
    transform:scale(1.4);
    width:100%;
  }
}

#daysoftheweek {
  position:absolute;
  bottom:7vh;
  left:0;
  right:0;
  body[data-theme="pier31"] & {
    z-index:$topMost;
  }
  .week {
    display:flex;
    justify-content:center;
  }
  color:white;
  h3 {
    margin:0;
  }
}

.weekday {
  padding:0 0.2em;
  flex-basis:3em;
  opacity:0.42;
  transition:opacity 240ms ease;
  &.today {
    opacity:1;
  }
  .monfirst & {
    &.mon { order:-1 }
    &.sun { order:1 }
  }
}

main {
  height:100vh;
}

body {
  font-family:sans-serif;
}

.settings {
  display:none;

  @extend %shaded;
  min-height:100vh;
  color:$green;
  z-index:$topMost + 10;
  .container {
    max-width:68vw;
    margin:0 auto;
    z-index:$topMost + 10;
    input {
      z-index:$topMost + 10;
    }
  }
}
